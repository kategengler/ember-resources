{"version":3,"file":"resource.test.js","sources":["../../../../src/core/class-based/-type-tests/resource.test.ts"],"sourcesContent":["import { expectTypeOf } from 'expect-type';\n\nimport { Resource } from '../resource';\n\nimport type { ArgsFrom } from '../resource';\nimport type { Named, Positional } from '[core-types]';\n\n/**\n * Base class\n */\nexpectTypeOf<Resource['modify']>().parameters.toEqualTypeOf<\n  [Positional<unknown>, Named<unknown>]\n>();\n\n/**\n * Helpers\n */\ninterface SimpleArgs {\n  Positional: [number, string];\n}\nclass SomeResource extends Resource<SimpleArgs> {}\nclass SomeOtherResource<Args> extends Resource<Args> {}\nclass SomeClass {\n  foo = 'hello';\n}\n\nexpectTypeOf<ArgsFrom<Resource<SimpleArgs>>>().toEqualTypeOf<SimpleArgs>();\n\nexpectTypeOf<ArgsFrom<SomeResource>>().toEqualTypeOf<SimpleArgs>();\n\nexpectTypeOf<ArgsFrom<SomeOtherResource<SimpleArgs>>>().toEqualTypeOf<SimpleArgs>();\n\n// SomeClass is not a sub-class of Resource\n// @ts-expect-error\nexpectTypeOf<ArgsFrom<SomeClass>>().toEqualTypeOf<never>();\n\n// unknown is not a sub-class of Resource\n// @ts-expect-error\nexpectTypeOf<ArgsFrom<unknown>>().toEqualTypeOf<never>();\n\n/**\n * with no arguments specified\n */\nclass A extends Resource {\n  a = 1;\n}\n\n// @ts-expect-error\nA.from({});\n\n/**\n * with all arguments specified\n */\ntype BArgs = {\n  positional: [number, string];\n  named: {\n    num: number;\n    str: string;\n  };\n};\n\nexport class B<Args = BArgs> extends Resource<Args> {\n  b = 'b';\n}\n\nexpectTypeOf<B['modify']>().parameters.toEqualTypeOf<[Positional<BArgs>, Named<BArgs>]>();\nexpectTypeOf<ArgsFrom<B>>().toEqualTypeOf<BArgs>();\n\n/**\n * with all arguments, but capitalized (Signature style)\n */\n\ntype CArgs = {\n  Positional: [number, string];\n  Named: {\n    /**\n     * How do I test / assert JSDoc is carried?\n     * (it is, but I can't prove it)\n     * docs?\n     */\n    num: number;\n    str: string;\n  };\n};\n\nexport class C extends Resource<CArgs> {\n  c = 'c';\n}\n\nexpectTypeOf<C['modify']>().parameters.toEqualTypeOf<[Positional<CArgs>, Named<CArgs>]>();\nexpectTypeOf<ArgsFrom<C>>().toEqualTypeOf<CArgs>();\n\nC.from(() => ({ positional: [1, 'hi'], named: { num: 2, str: 'hi' } }));\nC.from({}, () => ({ positional: [1, 'hi'], named: { num: 2, str: 'hi' } }));\n\n/**\n * With only positional args\n */\nexport class Doubler extends Resource<{ positional: [number] }> {\n  doubled = 2;\n}\n\nDoubler.from(() => [1]);\nDoubler.from({}, () => [2]);\n"],"names":["expectTypeOf","parameters","toEqualTypeOf","A","Resource","constructor","args","_defineProperty","from","B","C","positional","named","num","str","Doubler"],"mappings":";;;;AAOA;AACA;AACA;AACAA,YAAY,EAAsB,CAACC,UAAU,CAACC,aAAa,EAExD,CAAA;AAcHF,YAAY,EAAkC,CAACE,aAAa,EAAc,CAAA;AAE1EF,YAAY,EAA0B,CAACE,aAAa,EAAc,CAAA;AAElEF,YAAY,EAA2C,CAACE,aAAa,EAAc,CAAA;;AAEnF;AACA;AACAF,YAAY,EAAuB,CAACE,aAAa,EAAS,CAAA;;AAE1D;AACA;AACAF,YAAY,EAAqB,CAACE,aAAa,EAAS,CAAA;;AAExD;AACA;AACA;AACA,MAAMC,CAAC,SAASC,QAAQ,CAAC;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,YACnB,CAAC,CAAA,CAAA;AAAA,GAAA;AACP,CAAA;;AAEA;AACAJ,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC,CAAA;;AAEV;AACA;AACA;;AASO,MAAMC,CAAC,SAAuBL,QAAQ,CAAO;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,YAC9C,GAAG,CAAA,CAAA;AAAA,GAAA;AACT,CAAA;AAEAP,YAAY,EAAe,CAACC,UAAU,CAACC,aAAa,EAAqC,CAAA;AACzFF,YAAY,EAAe,CAACE,aAAa,EAAS,CAAA;;AAElD;AACA;AACA;;AAeO,MAAMQ,CAAC,SAASN,QAAQ,CAAQ;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,YACjC,GAAG,CAAA,CAAA;AAAA,GAAA;AACT,CAAA;AAEAP,YAAY,EAAe,CAACC,UAAU,CAACC,aAAa,EAAqC,CAAA;AACzFF,YAAY,EAAe,CAACE,aAAa,EAAS,CAAA;AAElDQ,CAAC,CAACF,IAAI,CAAC,OAAO;AAAEG,EAAAA,UAAU,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,GAAG,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE,IAAA;AAAK,GAAA;AAAE,CAAC,CAAC,CAAC,CAAA;AACvEJ,CAAC,CAACF,IAAI,CAAC,EAAE,EAAE,OAAO;AAAEG,EAAAA,UAAU,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,GAAG,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE,IAAA;AAAK,GAAA;AAAE,CAAC,CAAC,CAAC,CAAA;;AAE3E;AACA;AACA;AACO,MAAMC,OAAO,SAASX,QAAQ,CAA2B;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,kBACpD,CAAC,CAAA,CAAA;AAAA,GAAA;AACb,CAAA;AAEAQ,OAAO,CAACP,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;AACvBO,OAAO,CAACP,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;;;"}